#!/usr/bin/perl

use strict;
use locale;
use utf8;
use Getopt::Long;
use GEDCOM::ReportEngine;
use Encode;
use Data::Dumper;
use open IO => ':utf8';

binmode STDOUT, ":utf8";

my $gedcom_file = "genealogi.ged";
my $individual;
my $report_type = "ancestors";
my $ancestors   = 1;
my $descendants = 0;
my $pattern;
my $xref;
my $output;

GetOptions(
    "file=s"      => \$gedcom_file,
    "ancestors"   => \$ancestors,
    "descendants" => \$descendants,
    "type=s"      => \$report_type,
    "pattern=s"   => \$pattern,
    "xref=s"      => \$xref,
    "output=s"    => \$output,
) or die("Felaktiga kommandoradsparametrar");

# Ã–ppna GEDCOM-fil
my $ged = new GEDCOM::ReportEngine $gedcom_file;

# The individual for which we should create a report
my $indi;

# Find object or whatever
if ($xref) {
    $xref = "@" . $xref. "@" unless ($xref =~ m/^\@.*\@$/);
    print STDERR "Find $xref...\n";
    $indi = $ged->get_xref($xref);
}
else {
    $pattern = join( " ", @ARGV ) unless ($pattern);
    $pattern = decode( "utf-8", $pattern );
    $pattern =~ s/[\-\.]/ /g;
    print STDERR "Find \"$pattern\"...\n";
    $indi = $ged->get_individual($pattern);
}

if ($indi) {
    print STDERR "Found ", $indi->plainname, ".\n";
    if ($output) {
        open( OUTPUT, '>', $output ) or die;
    }
    else {
        *OUTPUT = *STDOUT;
    }
    if ( $report_type eq "ancestors" ) {
        print OUTPUT $indi->ancestors_report();
    }
    elsif ( $report_type eq "descendants" ) {
        print OUTPUT $indi->descendants_report();
    }
    close OUTPUT;
}
else {
    print STDERR
        "No idividual found. Use either --xref <xref> or --pattern <pattern>.\n";
}
